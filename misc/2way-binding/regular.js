/* App.svelte generated by Svelte v4.2.18 */
import {
  SvelteComponent,
  create_component,
  destroy_component,
  detach,
  init,
  insert,
  mount_component,
  noop,
  safe_not_equal,
  space,
  text,
  transition_in,
  transition_out
} from "svelte/internal";

import "svelte/internal/disclose-version";
import Two from "./Two.svelte";

function create_fragment(ctx) {
  let t0;
  let t1;
  let two;
  let current;
  two = new Two({ props: { name } });

  return {
    c() {
      t0 = text(name);
      t1 = space();
      create_component(two.$$.fragment);
    },
    m(target, anchor) {
      insert(target, t0, anchor);
      insert(target, t1, anchor);
      mount_component(two, target, anchor);
      current = true;
    },
    p: noop,
    i(local) {
      if (current) return;
      transition_in(two.$$.fragment, local);
      current = true;
    },
    o(local) {
      transition_out(two.$$.fragment, local);
      current = false;
    },
    d(detaching) {
      if (detaching) {
        detach(t0);
        detach(t1);
      }

      destroy_component(two, detaching);
    }
  };
}

let name = 1;

class App extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, null, create_fragment, safe_not_equal, {});
  }
}

export default App;
