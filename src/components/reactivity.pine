---
import kotlinx.coroutines.flow.MutableStateFlow

 class ViewModel {
    val v = MutableStateFlow("")
    val first = MutableStateFlow("")
    val c = MutableStateFlow(0)
 }
 
---
import androidx.compose.material3.Text
import androidx.compose.material3.Button

import com.example.cupcake.ui.components.ComplexButton
import com.example.cupcake.utils.*


val viewModel = remember { ViewModel() } 
val (first, setFirst) = viewModel.first.collectAsMutableState()

val $c = 0

if(c > 5) {
  println("greater than 5")
}
else {
  println("less than 5")

}

var *count = 0

println("[components/reactivity.pine]: Top")
Text(text="Simple count: $count")

Button(onClick={
  count = count + 1
}) {
  Text(text="Simple: Click me")
}



//Text(text=text)
//
//Button(onClick={
//  count = count + 1
//}) {
//  Text(text="Complex: Click me")
//}


Text(text="Complex count: $count")
Text(text="Simple count: $count")
  Button(onClick={
    count = count + 1
  }) {
    Text(text="Simple: Click me")
  }
